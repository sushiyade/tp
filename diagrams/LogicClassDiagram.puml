@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor LOGIC_COLOR_T4
skinparam classBackgroundColor LOGIC_COLOR

package Logic as LogicPackage {

Class "{abstract}\nParseCommandHandler" as ParseCommandHandler
Class ContactParser
Class XYZCommand
Class CommandResult
Class "{abstract}\nCommand" as Command

Class "<<interface>>\nLogic" as Logic
Class LogicManager
}

package Model {
Class HiddenModel #FFFFFF
}

package Storage {
}

Class HiddenOutside #FFFFFF
HiddenOutside ..> Logic

ContactsTab .down.> LogicManager
note right of ContactsTab: This logic is mirrored for all three tabs\n i.e. FinanceTab will have a FinanceParser instead

LogicManager .right.|> Logic
LogicManager -down->"1" ParseCommandHandler
ContactParser -up-|> ParseCommandHandler

ContactParser ..> XYZCommand : creates >

XYZCommand -up-|> Command
LogicManager .left.> Command : executes >

LogicManager --> Model
LogicManager --> Storage
Storage --[hidden] Model
Command .[hidden]up.> Storage
Command .right.> Model
note right of XYZCommand: XYZCommand = AddCommand, \nFindCommand, etc

Logic ..> CommandResult
LogicManager .down.> CommandResult
Command .up.> CommandResult : produces >
@enduml
